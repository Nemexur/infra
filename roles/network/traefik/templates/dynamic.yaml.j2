---
http:
  serversTransports:
    ignorecert:
      insecureSkipVerify: true
  routers:
    grafana:
      rule: "Host(`grafana.{{ host_local }}`)"
      service: grafana-service
      tls:
        certresolver: myresolver
      entryPoints:
        - websecure
    pihole:
      rule: "Host(`pihole.{{ host_local }}`)"
      service: pihole-service
      tls:
        certresolver: myresolver
      entryPoints:
        - websecure
    uptime-kuma:
      rule: "Host(`uptime-kuma.{{ host_local }}`)"
      service: uptime-kuma-service
      tls:
        certresolver: myresolver
      entryPoints:
        - websecure
    plex:
      rule: "Host(`plex.{{ host_local }}`)"
      service: plex-service
      tls:
        certresolver: myresolver
      entryPoints:
        - websecure
    portainer-alice:
      rule: "Host(`portainer-alice.{{ host_local }}`)"
      service: portainer-alice-service
      tls:
        certresolver: myresolver
      entryPoints:
        - websecure
    portainer-bravo:
      rule: "Host(`portainer-bravo.{{ host_local }}`)"
      service: portainer-bravo-service
      tls:
        certresolver: myresolver
      entryPoints:
        - websecure
    wireguard-ui:
      rule: "Host(`wireguard-ui.{{ host_local }}`)"
      service: wireguard-ui-service
      tls:
        certresolver: myresolver
      entryPoints:
        - websecure
  services:
    grafana-service:
      loadBalancer:
        servers:
          - url: "http://{{ lan_hosts.bravo }}:3000"
    wireguard-ui-service:
      loadBalancer:
        servers:
          - url: "http://{{ lan_hosts.bravo }}:51821"
    portainer-bravo-service:
      loadBalancer:
        servers:
          - url: "http://{{ lan_hosts.bravo }}:9000"
    pihole-service:
      loadBalancer:
        servers:
          - url: "http://{{ lan_hosts.router }}:8080"
    uptime-kuma-service:
      loadBalancer:
        servers:
          - url: "http://{{ lan_hosts.router }}:3001"
    plex-service:
      loadBalancer:
        servers:
          - url: "http://{{ lan_hosts.alice }}:32400"
    portainer-alice-service:
      loadBalancer:
        servers:
          - url: "http://{{ lan_hosts.alice }}:9000"
  middlewares:
    nextcloud-middlewares-secure-headers:
      headers:
        accessControlMaxAge: 100
        hostsProxyHeaders: ["X-Forwarded-Host"]
        sslRedirect: true
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        customFrameOptionsValue: "SAMEORIGIN"
        contentTypeNosniff: true
        browserXssFilter: true
        referrerPolicy: "same-origin"
        permissionsPolicy: "camera=(), microphone=(), geolocation=(), payment=(), usb=(), vr=()"
        customResponseHeaders:
          X-Robots-Tag: "none"
          server: ""
    nextcloud-redirect:
      redirectRegex:
        permanent: true
        regex: "https://(.*)/.well-known/(card|cal)dav"
    chain-nextcloud:
      chain:
        middlewares:
          - nextcloud-middlewares-secure-headers
          - nextcloud-redirect
